
1. 팬션정보 테이블 - pension1
2. 예약정보 테이블 - pension2  - pension2_seq (1001)
3. 회원정보 테이블 - pension3
4. 코드정보 테이블 - pension4  - pension4_seq (1)



1. 팬션(룸)정보 테이블
  create table pension1 (
    room number(3) not null primary key,  -- 룸번호
    rsize   number(3) not null, -- 룸크기
    price  number default '0'   -- 룸가격
  );

create sequence pension2_seq
start with 1001
increment by 1
maxvalue 999999;

2. 예약정보 테이블
  create table pension2 (
    code varchar2(50) not null primary key, -- m1001 ~~
    room number(3) not null,  -- 방번호
    sdate date,
    edate date,
    userid varchar2(50) not null,
    constraint pension2_fn foreign key(room) references pension1(room)
  ); 

 -- alter table pension2 add constraint pension2_fn foreign key(room)
					    references pension1(room);

3. 회원정보 테이블
  create table pension3 (
    userid varchar2(50) not null primary key,
    pass varchar2(100) not null,
    name varchar2(50),
    mobile varchar2(50) not null,
    gender char(1) check(gender in('M','F'))
  );

create sequence pension4_seq
start with 1
increment by 1
maxvalue 999999;

4. 코드정보 테이블
  create table pension4 (
    unq number not null primary key,
    cd1 varchar2(20) not null,
    cd2 varchar2(20) not null
  );




